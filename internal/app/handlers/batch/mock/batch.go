// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/handlers/batch/batch.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	config "github.com/FischukSergey/urlshortener.git/config"
	gomock "github.com/golang/mock/gomock"
)

// MockBatchSaver is a mock of BatchSaver interface.
type MockBatchSaver struct {
	ctrl     *gomock.Controller
	recorder *MockBatchSaverMockRecorder
}

// MockBatchSaverMockRecorder is the mock recorder for MockBatchSaver.
type MockBatchSaverMockRecorder struct {
	mock *MockBatchSaver
}

// NewMockBatchSaver creates a new mock instance.
func NewMockBatchSaver(ctrl *gomock.Controller) *MockBatchSaver {
	mock := &MockBatchSaver{ctrl: ctrl}
	mock.recorder = &MockBatchSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBatchSaver) EXPECT() *MockBatchSaverMockRecorder {
	return m.recorder
}

// GetStorageURL mocks base method.
func (m *MockBatchSaver) GetStorageURL(ctx context.Context, alias string) (string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStorageURL", ctx, alias)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetStorageURL indicates an expected call of GetStorageURL.
func (mr *MockBatchSaverMockRecorder) GetStorageURL(ctx, alias interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStorageURL", reflect.TypeOf((*MockBatchSaver)(nil).GetStorageURL), ctx, alias)
}

// SaveStorageURL mocks base method.
func (m *MockBatchSaver) SaveStorageURL(ctx context.Context, saveURL []config.SaveShortURL) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveStorageURL", ctx, saveURL)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveStorageURL indicates an expected call of SaveStorageURL.
func (mr *MockBatchSaverMockRecorder) SaveStorageURL(ctx, saveURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveStorageURL", reflect.TypeOf((*MockBatchSaver)(nil).SaveStorageURL), ctx, saveURL)
}
