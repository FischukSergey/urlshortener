package deletedflag

import (
	"log/slog"
	"net/http"

	"github.com/FischukSergey/urlshortener.git/internal/app/middleware/auth"
	"github.com/FischukSergey/urlshortener.git/internal/storage/dbstorage"
	"github.com/go-chi/render"
)

// type DeletedFlager interface {
// 	DeleteBatch(ctx context.Context, delmsges ...DeletedRequest) error

// }

type AutoGenerated []string

func DeleteShortURL(log *slog.Logger, storage *dbstorage.Storage) http.HandlerFunc {
	return func(w http.ResponseWriter, r *http.Request) {

		w.Header().Set("Content-Type", "application/json")

		userID := r.Context().Value(auth.CtxKeyUser).(int)

		var req AutoGenerated

		err := render.DecodeJSON(r.Body, &req)
		if err != nil {
			w.WriteHeader(http.StatusBadRequest)
			log.Error("not read body request")
			return
		}

		//пишем в буферизированный канал данные запроса
		for _, val := range req {
			storage.DelChan <- dbstorage.DeletedRequest{
				ShortURL: val,
				UserID:   userID,
			}
		}

		w.WriteHeader(http.StatusAccepted)

	}
}
