package deletedflag

import (
	"context"
	"log/slog"
	"net/http"
	"time"

	"github.com/go-chi/render"
)

type DeletedFlager interface {
	DeleteBatch(ctx context.Context, aliases []string) error
}

type AutoGenerated []string

func DeleteShortURL(log *slog.Logger, storage DeletedFlager) http.HandlerFunc {
	return func(w http.ResponseWriter, r *http.Request) {

		w.Header().Set("Content-Type", "application/json")

		var req AutoGenerated

		err := render.DecodeJSON(r.Body, &req) 

		if err != nil {
			w.WriteHeader(http.StatusBadRequest)
			log.Error("not read body request")
			return
		}
		
		ctx, cancel := context.WithTimeout(r.Context(), 3*time.Second)
		defer cancel()

		_ = storage.DeleteBatch(ctx, req)
		w.WriteHeader(http.StatusAccepted)

	}
}
